import os
import time

# Для начала, чтобы использовать стандартную команду zip, пользователи Windows могут установить её состраницы проекта GnuWin32
# и добавить «C:\Program Files\GnuWin32\bin» к системной переменной окружения PATH (обязательно проследить за верностью пути - у меня это програмфайлс (х86))
# «Панель Управления» → «Система и безопасность» → «Система». Нажмите «Дополнительные параметры системы» слева, а затем выберите вкладку «Дополнительно». 
# Внизу нажмите кнопку «Переменные среды» и в отделе «Системные переменные» найдите переменную PATH, выберите её и нажмите «Редактировать». 

# 1. Файлы и каталоги, которые необходимо скопировать, собираются в список.
source = ['E:\\bezdat']

# 2. Резервные копии должны храниться в основном каталоге резерва.
target_dir = 'E:\\Backup'
# Подставьте ваш путь - ДИРЕКТОРИЯ УЖЕ ДОЛЖНА БЫТЬ СОЗДАНА

# 3. Файлы помещаются в zip-архив.

# 4. Именем для zip-архива служит текущая дата и время.
today = target_dir + os.sep + time.strftime('%Y%m%d') 
# Текущее время служит именем zip-архива

now = time.strftime('%H%M%S')
# Запрашиваем комментарий пользователя для имени файла 
comment = input('Введите комментарий --> ')
if len(comment) == 0: # проверяем, введён ли комментарий
    target = today + os.sep + now + '.zip'
else:
    target = today + os.sep + now + '_' + \
        comment.replace(' ', '_') + '.zip'
        # здесь обратить внимание на перенос строки с помощью \

# Создаём каталог, если его ещё нет
if not os.path.exists(today):
    os.mkdir(today) # создание каталога
    print('Каталог успешно создан', today)

# 5. Используем команду "zip" для помещения файлов в zip-архив
zip_command = "zip -qr {0} {1}".format(target, ' '.join(source))

# Запускаем создание резервной копии
if os.system(zip_command) == 0:
    print('Резервная копия успешно создана в', target)
else:
    print('Создание резервной копии НЕ УДАЛОСЬ')
